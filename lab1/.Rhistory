getwd()
4*12
mean(4, 6, 8, 5, 6, 7, 7, 7)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library("tidyverse")
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar()
#install.packages("tidyverse")
library("tidyverse")
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar()
#install.packages("tidyverse")
library("tidyverse")
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar()
+ 5 - 3 * 2
+ 8 / 2 ** 2
+ (5 - 3) * 2
+ (8 / 2) ** 2
pi <- 3.14159265359
+ pi * 2
?mean
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
median(x)
x <- 42
x
treatment <- 36
control <- 38
treatment <- 36
control <- 38
sum(control, threatment)
treatment <- 36
control <- 38
sum(control, treatment)
my_experiment <- sum(treatment, control)
my_experiment
my_experiment
venom_GT <- 270
chiron <- 261
veyron <- 268
mean(venom_GT, chiron, veyron)
mean(venom_GT, chiron, veyron)
+(261+270+268)/3
(261+270+268)/3
cars <- c(venom_GT, chiron, veyron)
mean(c)
cars <- c(venom_GT, chiron, veyron)
mean(cars)
x <- 42
treatment <- 36
control <- 38
sum(control, treatment)
my_experiment <- sum(treatment, control)
my_experiment
my_experiment
venom_GT <- 270
chiron <- 261
veyron <- 268
top_speed <- (venom_GT, chiron, veyron)
top_speed <- c(venom_GT, chiron, veyron)
top_speed <- c(venom_GT, chiron, veyron)
mean(top_speed)
my_numeric <- 42
my_integer <- 2L #adding an L automatically denotes an integer
my_character <- "universe"
my_logical <- FALSE
my_complex <- 2+4i
class(my_numeric)
is.integer(my_numeric) #is my_numeric an integer?
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
my_integer <-
as.integer(my_numeric) #create a new object specified as an integer
is.integer(my_integer) #is my_numeric an integer?
practice_integer <- 50L
practice_integer <- 50L
practice_integer
practice_integer <- 50L
practice_integer
is.integer(practice_integer)
practice_integer <- as.numeric(practice_integer)
is.integer(practice_integer)
my_missing <- NA
is.na(my_missing)
anyNA(my_missing)
new_NA_practice <- c(10, NA, 20)
new_NA_practice <- c(10, NA, 20)
is.na(new_NA_practice)
new_NA_practice <- c(10, NA, 20)
is.na(new_NA_practice)
anyNA(new_NA_practice)
new_vector <- c(7, 6.2, 5, 9, NA, 4, 9.8, 7, 3, 2)
mean(new_vector)
is.na(new_vector)
mean(new_vector, na.rm=T) #na.rm removes the NA values in the vector
my_vector <- c(10, 20, 30)
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thrusday", "Friday", "Saturday", "Sunday")
days_of_the_week
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
days_of_the_week[3]
days_of_the_week[8]
my_vector_sequence
my_vector_sequence
my_vector_sequence[15]
my_vector_sequence[>=10]
my_vector_sequence[>10]
my_vector_sequence[10>]
my_vector_sequence(10>)
my_vector_sequence[10]>
my_vector_sequence([10]>)
my_vector_sequence[>10]
my_vector_sequence[x>10]
my_vector_sequence[>=10]
my_vector_sequence <=10
my_vector_sequence[my_vector_sequence <= 10]
my_vector_sequence[my_vector_sequence <= 10]
my_vector_sequence[my_vector_sequence >= 10]
my_vector_sequence
my_vector_sequence[15]
#Professor's way:
my_vector_sequence == 15
my_vector_sequence[my_vector_sequence <= 10]
my_vector_sequence[my_vector_sequence >= 10]
#Now you can do
yet_another_new_vector <- my_vector_sequence[my_vector_sequence <=15]
#Store as another new vector and use it whatever way we wish
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
sum(global)
all_harry_potter_matrix <- rbind(sum(global))
all_harry_potter_matrix <- rbind(sum(global))
all_harry_potter_matrix
all_harry_potter_matrix <- rbind(harry_potter_matrix, sum(global))
all_harry_potter_matrix
sum(global) <- Total
all_harry_potter_matrix <- rbind(harry_potter_matrix, sum(global))
all_harry_potter_matrix
sum(global)
#How professor did it
total_earnings <- colSums(all_harry_potter_matrix)
sum(global)
#How professor did it
total_earnings <- colSums(all_harry_potter_matrix)
total_earnings
all_harry_potter_matrix <- rbind(harry_potter_matrix, sum(global))
all_harry_potter_matrix
#How professor did it
final_harry_potter_matrix <- rbind(all_harry_potter_matrix, total_earnings)
final_harry_potter_matrix
harry_potter_matrix[2,1]
harry_potter_matrix[1:4]
non_us_earnings <- all_harry_potter_matrix[ ,2]
mean(non_us_earnings)
