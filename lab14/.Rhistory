if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
BiocManager::install(c("ShortRead", "Biostrings"))# Install specific packages
install.packages("qtl")
install.packages("qtlcharts")
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
?read.cross
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B"))
summary(sug)
head(sug$pheno)
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
#?plotMissing
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
#?plotMap
plotMap(sug)
plotMap(sug,show.marker.names=TRUE)
#?plotPheno
plotPheno(sug, pheno.col=1)
plotPheno(sug, pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col=4)
iplotMap(sug) #D7MIT31
iplotCorr(sug$pheno)
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot <- iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
sug <- calc.genoprob(sug, step=1)
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
summary(out.em)
summary(out.em2)
summary(out.em, threshold=3)
plot(out.em)
plot(out.em, chr=c(7,15), ylab="LOD Score")
iplotScanone(out.em)
iplotScanone(out.em, chr=c(7,15))
iplotScanone(out.em, sug)
iplotScanone(out.em, sug, chr=c(7,15))
data(grav)
summary(grav)
plotMap(grav)
iplotMap(grav)
head(grav$pheno)
iplotCorr(grav$pheno)
iplotCurves(grav$pheno)
times1 <- as.numeric(sub("T", "", phenames(grav)))/60
times1
times <- attr(grav, "time")
times
#?attr
phe <- grav$pheno
head(phe)
iplotCurves(phe, times)
iplotCurves(phe, times, chartOpts=list(curves_xlab="Time (hrs)",
curves_ylab="Response"))
iplotCurves(phe, times, phe[,c("T30", "T240")], phe[,c("T240", "T480")],
chartOpts=list(curves_xlab="Time", curves_ylab="Root tip angle",
scat1_xlab="Angle at 30 min", scat1_ylab="Angle at 4 hrs",
scat2_xlab="Angle at 4 hrs", scat2_ylab="Angle at 8 hrs"))
grav <- calc.genoprob(grav, step=1)
out.em <- scanone(grav, pheno.col=1:nphe(grav))
summary(out.em)
times_m <- c("T30", "T240", "T480")
times_clear <- c("30 mins", "4 hours", "8 hours")
times_number <- match(times_m, phenames(grav))
for(i in 1:length(times_m))
print(iplotScanone(out.em, lodcolumn=times_number[i], chartOpts=list(title=times_clear[i])))
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
?diff
library(tidyverse)
library(ggmap)
library(lubridate)
x <- 0                 # Preliminary specification of data object
repeat{                # Head of repeat-loop
x <- x + 1           # Body of repeat-loop
print(x)
if(x >= 10) {        # Break condition of repeat-loop. "Repeat process until x >= 10
break
}
}
data <- data.frame(x1 = 1:5,      # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data                   # Replicate example data
i <- 1                          # Create running index (It's like an x in the previous example)
repeat{                         # Start repeat-loop
data1[ , i] <- data1[ , i] + 100  #Taking value inside [] is specific value of data frame. Store that value +100 into new value as a new column.
i <- i + 1
if(i > 2) {
break
}
}
data1
#?iris
data(iris)                          # Loading data frame
head(iris)                          # Head of example data
iris1 <- iris                       # Replicate example data
i <- 1
repeat{
iris1[ , i] <- iris1[ , i] * 10
i <- i + 1
if(!is.numeric(iris1[ , i])){
break
}
}
head(iris1)
# if (!requireNamespace("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
# BiocManager::install()                            # To install core packages or update installed packages
# BiocManager::install(c("ShortRead", "Biostrings"))# Install specific packages
library(ShortRead)
library(Biostrings)
reads <- readFasta("data/archaea-dna/a-saccharovorans.fasta")
seq <- sread(reads)
base_freq <- alphabetFrequency(seq)
gc_content <- (base_freq[1, "G"] + base_freq[1, "C"]) / sum(base_freq) * 100
gc_content
data_files2 <- list.files("data/archaea-dna")
data_files2
GC_results <- data.frame(file_name = vector(mode = "character", length = length(data_files2)),
gc_content = vector(mode = "integer", length = length(data_files2)))
for (i in 1:length(data_files2)){
reads <- readFasta("data/archaea-dna",data_files2[i])
seq <- sread(reads)
base_freq <- alphabetFrequency(seq)
gc_content <- (base_freq[1, "G"] + base_freq[1, "C"]) / sum(base_freq) * 100
GC_results$file_name[i] <- data_files2[i]
GC_results$gc_content[i] <- gc_content
}
GC_results
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width=8, fig.height=6, message=FALSE)
sug <- read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC", "CB", "BB"), alleles=c("C", "B")) #Specifying genotype you have
summary(sug)
head(sug$pheno)
#Also specifies ID of mouse. so counts as phenotype
#Have sex, but all mice are male, hence why it's 1
#Quantitative traits: bp, hr, bw, heart_wt
nind(sug)    # No. individuals
nphe(sug)    # No. phenotypes
nchr(sug)    # No. chromosomes
totmar(sug)  # Total markers
nmar(sug)    # No. markers on each chromosome
plot(sug)
sug <- calc.genoprob(sug, step=1) #Indicates density used for calculation, or centimorgan
out.em <- scanone(sug)
out.em2 <- scanone(sug, pheno.col=1:4)
#Dropping phenotypes, so when assessing differences, it will use the first phenotype (ex. in this case blood pressure)
summary(out.em)
summary(out.em2)
data(grav)
summary(grav)
plotMap(grav)
iplotMap(grav)
head(grav$pheno)
iplotCorr(grav$pheno)
iplotCurves(grav$pheno)
times1 <- as.numeric(sub("T", "", phenames(grav)))/60
times1
times <- attr(grav, "time")
times
#?attr
phe <- grav$pheno
head(phe)
knitr::opts_chunk$set(echo = TRUE)
asd <- read_csv(here("ASD meta abundance 2.csv"))
getwd()
asd <- read_csv(here("ASD meta abundance 2 copy.csv"))
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- read_csv(here("ASD meta abundance 2 copy.csv"))
asd <- read_csv(here("Berlin/ASD meta abundance 2 copy.csv"))
library(tidyverse)
library(janitor)
library(here)
library(naniar)
asd <- read_csv(here("Berlin/ASD meta abundance 2 copy.csv"))
View(asd)
glimpse(asd)
summary(asd)
names(asd)
asd_longer <- asd %>%
pivot_longer(-Taxonomy, names_to = "Condition", values_to = "Abundance")%>%
asd_longer <- asd %>%
pivot_longer(-Taxonomy, names_to = "Condition", values_to = "Abundance")
asd_longer <- asd %>%
pivot_longer(-Taxonomy, names_to = "Condition", values_to = "Abundance")
asd_longer
